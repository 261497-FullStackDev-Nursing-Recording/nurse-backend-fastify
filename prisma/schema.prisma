// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  NURSE_ADMIN
  NURSE
  USER
}

enum Shift {
  MORNING
  EVENING
  NIGHT
}

model User {
  id              String          @id @default(uuid())
  f_name          String
  l_name          String
  username        String          @unique
  password        String
  role            Role            @default(USER)
  created_at      DateTime        @default(now())
  // updatedAt DateTime @updatedAt
  user_on_patient UserOnPatient[]
  records         Record[]
  fields          Field[]
}

enum Status {
  STATUS_1
  STATUS_2
  STATUS_3
  STATUS_4
}

model Patient {
  id                String          @id @default(uuid())
  f_name            String
  l_name            String
  hn                String
  identification_id String
  status            Status
  user_on_patient   UserOnPatient[]
  records           Record[]
}

model UserOnPatient {
  user       User    @relation(fields: [user_id], references: [id])
  user_id    String
  patient    Patient @relation(fields: [patient_id], references: [id])
  patient_id String

  @@id([user_id, patient_id])
}

enum FieldCode {
  O_TEXT
  S_TEXT
  NDX_TEXT
  IHEAL_TEXT
  IREHAB_TEXT
  IPREVENT_TEXT
  IPROMOTE_TEXT
  IPHYCHO_TEXT
  E_TEXT
}

model Record {
  id           String   @id @default(uuid())
  created_by   User     @relation(fields: [user_id], references: [id])
  user_id      String
  patient      Patient  @relation(fields: [patient_id], references: [id])
  patient_id   String
  bed_number   Int
  ward         String
  diseaseGroup String
  shift        Shift
  created_at   DateTime @default(now())
  modified_at  DateTime @updatedAt
  visit_number String
  fields       Field[]
}

model Field {
  id               String         @id @default(uuid())
  record           Record         @relation(fields: [record_id], references: [id])
  record_id        String
  created_by       User           @relation(fields: [user_id], references: [id])
  user_id          String
  field_code       FieldCode
  field_pre_label  String?
  field_value      String
  field_post_label String?
  parents          FieldOnField[] @relation("ParentField")
  children         FieldOnField[] @relation("ChildrenField")
  created_at       DateTime       @default(now())
  modified_at      DateTime       @updatedAt
}

model FieldOnField {
  id        String @id @default(uuid())
  parents   Field  @relation("ParentField", fields: [parent_id], references: [id])
  parent_id String
  childs    Field  @relation("ChildrenField", fields: [child_id], references: [id])
  child_id  String
}
